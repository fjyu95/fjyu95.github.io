<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>三维重建 - Category - FangjieYu‘s site</title><link>https://fjyu95.github.io/categories/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/</link><description>三维重建 - Category - FangjieYu‘s site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>907040864@qq.com (fjyu95)</managingEditor><webMaster>907040864@qq.com (fjyu95)</webMaster><lastBuildDate>Tue, 11 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://fjyu95.github.io/categories/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/" rel="self" type="application/rss+xml"/><item><title>3D表征</title><link>https://fjyu95.github.io/posts/3d-representation-197e4020f06080dfad15f512e5b03751/</link><pubDate>Tue, 11 Feb 2025 00:00:00 +0000</pubDate><author>fjyu95</author><guid>https://fjyu95.github.io/posts/3d-representation-197e4020f06080dfad15f512e5b03751/</guid><description><![CDATA[<p>几何模型 CAD CSG</p>
<p>体素</p>
<p>点云</p>
<p>mesh</p>
<p>隐式表达 SDFs</p>
<h1 id="pcd">pcd</h1>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># python 保存、读取</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">plyfile</span> <span class="kn">import</span> <span class="n">PlyData</span><span class="p">,</span> <span class="n">PlyElement</span>
</span></span><span class="line"><span class="cl"><span class="n">ply_data</span> <span class="o">=</span> <span class="n">PlyData</span><span class="p">([</span><span class="n">vertex_element</span><span class="p">])</span>
</span></span><span class="line"><span class="cl"><span class="n">ply_data</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 判断格式</span>
</span></span><span class="line"><span class="cl"><span class="n">head</span> <span class="o">-</span><span class="n">n</span> <span class="mi">10</span> <span class="n">plyfile</span>
</span></span><span class="line"><span class="cl"><span class="nb">format</span> <span class="n">binary_little_endian</span> <span class="mf">1.0</span> <span class="c1"># 二进制-小端格式</span>
</span></span><span class="line"><span class="cl"><span class="nb">format</span> <span class="n">ascii</span> <span class="mf">1.0</span> <span class="c1"># 文本</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&#34;input.ply&#34;</span><span class="p">,</span> <span class="s2">&#34;rb&#34;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">header</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span><span class="o">.</span><span class="n">decode</span><span class="p">()</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="s2">&#34;format ascii&#34;</span> <span class="ow">in</span> <span class="n">header</span><span class="o">.</span><span class="n">lower</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s2">&#34;文件是ASCII格式，建议转换为二进制&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 格式转换</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">trimesh</span>
</span></span><span class="line"><span class="cl"><span class="n">mesh</span> <span class="o">=</span> <span class="n">trimesh</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s2">&#34;input.ply&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">mesh</span><span class="o">.</span><span class="n">export</span><span class="p">(</span><span class="s2">&#34;output_binary.ply&#34;</span><span class="p">,</span> <span class="n">file_type</span><span class="o">=</span><span class="s2">&#34;ply&#34;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s2">&#34;binary&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 高效读取库</span>
</span></span><span class="line"><span class="cl"><span class="n">trimesh</span> 
</span></span><span class="line"><span class="cl"><span class="n">pyply</span>
</span></span><span class="line"><span class="cl"><span class="n">pyntcloud</span>
</span></span><span class="line"><span class="cl"><span class="n">pandas</span>
</span></span><span class="line"><span class="cl"><span class="n">open3d</span>
</span></span><span class="line"><span class="cl"><span class="n">numpy</span><span class="o">.</span><span class="n">fromfile</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 读取加速</span>
</span></span><span class="line"><span class="cl"><span class="n">Chunking</span>
</span></span><span class="line"><span class="cl"><span class="n">二进制</span>
</span></span><span class="line"><span class="cl"><span class="n">多进程</span><span class="o">/</span><span class="n">并行</span>
</span></span></code></pre></div><h1 id="sdf">SDF</h1>
<p>在三维计算机图形学和三维重建领域，<strong>SDF（Signed Distance Function）</strong> 是一种非常重要的表示三维物体的方法。它可以描述一个三维物体的形状，广泛应用于计算机图形学、物理模拟、3D建模、虚拟现实（VR）等领域。SDF 用于描述空间中的每个点与物体表面之间的距离，且每个点的值是一个标量，表示到最近表面的距离，并且带有符号信息（即物体内外的区分）。</p>]]></description></item><item><title>VR/AR</title><link>https://fjyu95.github.io/posts/vr-ar-191e4020f06080099cb5dc09ac716a83/</link><pubDate>Wed, 05 Feb 2025 00:00:00 +0000</pubDate><author>fjyu95</author><guid>https://fjyu95.github.io/posts/vr-ar-191e4020f06080099cb5dc09ac716a83/</guid><description><![CDATA[<p><a href="https://wearable.ofweek.com/2018-02/ART-11000-5011-30199019.html" target="_blank" rel="noopener noreffer ">https://wearable.ofweek.com/2018-02/ART-11000-5011-30199019.html</a></p>
<p><a href="https://pdf.dfcfw.com/pdf/H3_AP202203251554968798_1.pdf?1648461781000.pdf" target="_blank" rel="noopener noreffer ">https://pdf.dfcfw.com/pdf/H3_AP202203251554968798_1.pdf?1648461781000.pdf</a></p>
<p></p>
<p><strong>虚拟现实 － Virtual Reality</strong></p>
<p>是利用设备模拟产生一个<strong>虚拟世界</strong>，提供用户关于视觉、听觉等感官的模拟，有十足的“沉浸感”与“临场感”。简单的说就是，你戴上一个VR眼镜（注意：戴上去后你就看不到现实世界了）看<strong>到的所有东西都是计算机生成的，都是虚拟的</strong>。典型的设备就是暴风魔镜。</p>]]></description></item><item><title>ROS</title><link>https://fjyu95.github.io/posts/ros-17ae4020f0608037ab9ce65eddd62e49/</link><pubDate>Mon, 13 Jan 2025 00:00:00 +0000</pubDate><author>fjyu95</author><guid>https://fjyu95.github.io/posts/ros-17ae4020f0608037ab9ce65eddd62e49/</guid><description><![CDATA[<h1 id="教程文档">教程文档</h1>
<p><a href="https://fishros.com/d2lros2/#/" target="_blank" rel="noopener noreffer ">https://fishros.com/d2lros2/#/</a></p>
<p><a href="https://www.ncnynl.com/archives/201801/2251.html" target="_blank" rel="noopener noreffer ">https://www.ncnynl.com/archives/201801/2251.html</a></p>
<p><a href="https://book.guyuehome.com/ROS2/2.%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/2_%E6%A6%82%E5%BF%B5%E6%80%BB%E8%A7%88/" target="_blank" rel="noopener noreffer ">https://book.guyuehome.com/ROS2/2.%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/2_%E6%A6%82%E5%BF%B5%E6%80%BB%E8%A7%88/</a></p>
<p><a href="https://fishros.org/doc/ros2/humble/Concepts/Basic.html#" target="_blank" rel="noopener noreffer ">https://fishros.org/doc/ros2/humble/Concepts/Basic.html#</a></p>
<p><a href="https://daobook.github.io/ros2-docs/xin/Tutorials/Understanding-ROS2-Nodes.html" target="_blank" rel="noopener noreffer ">https://daobook.github.io/ros2-docs/xin/Tutorials/Understanding-ROS2-Nodes.html</a></p>
<h1 id="安装">安装</h1>
<p><a href="https://blog.csdn.net/m0_64346597/article/details/126526791" target="_blank" rel="noopener noreffer ">https://blog.csdn.net/m0_64346597/article/details/126526791</a></p>
<p><a href="https://d2lros2foxy.fishros.com/#/humble/chapt1/get_started/3.%E5%8A%A8%E6%89%8B%E5%AE%89%E8%A3%85ROS2" target="_blank" rel="noopener noreffer ">https://d2lros2foxy.fishros.com/#/humble/chapt1/get_started/3.%E5%8A%A8%E6%89%8B%E5%AE%89%E8%A3%85ROS2</a></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget http://fishros.com/install -O fishros <span class="o">&amp;&amp;</span> . fishros
</span></span><span class="line"><span class="cl">有代理时不一定要换源，出现error后先n后y经测试可以安装成功
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">printenv <span class="p">|</span> grep -i ROS
</span></span><span class="line"><span class="cl">ros2 run demo_nodes_cpp talker
</span></span><span class="line"><span class="cl">ros2 run demo_nodes_py listener
</span></span><span class="line"><span class="cl">ros2 topic list
</span></span></code></pre></div><h1 id="核心概念">核心概念</h1>
<p>在ROS 2（Robot Operating System 2）中，<strong>节点（Nodes）</strong>、<strong>消息（Messages）</strong> 和 <strong>主题（Topics）</strong> 是核心概念，它们共同构成了ROS 2的通信机制。理解这些概念对于开发和调试ROS 2系统至关重要。</p>]]></description></item><item><title>DUSt3R系列学习</title><link>https://fjyu95.github.io/posts/dust3r-series-15ee4020f0608006803bfe528b97cab2/</link><pubDate>Mon, 16 Dec 2024 00:00:00 +0000</pubDate><author>fjyu95</author><guid>https://fjyu95.github.io/posts/dust3r-series-15ee4020f0608006803bfe528b97cab2/</guid><description><![CDATA[<p>密集无约束三维重建</p>
<p>Dense and Unconstrained Stereo 3D Reconstruction</p>
<p>通过一种全新的方法简化几何3D视觉任务，特别是在密集3D重建方面</p>
<p>实质是结合深度学习技术进行多视图<strong>密集三维重建</strong>。基于ViT架构</p>]]></description></item><item><title>3DGS</title><link>https://fjyu95.github.io/posts/3dgs-138e4020f06080e7b9ced1f2074982d5/</link><pubDate>Fri, 08 Nov 2024 00:00:00 +0000</pubDate><author>fjyu95</author><guid>https://fjyu95.github.io/posts/3dgs-138e4020f06080e7b9ced1f2074982d5/</guid><description><![CDATA[<p><a href="https://github.com/graphdeco-inria/gaussian-splatting?tab=readme-ov-file" target="_blank" rel="noopener noreffer ">GitHub - graphdeco-inria/gaussian-splatting: Original reference implementation of &ldquo;3D Gaussian Splatting for Real-Time Radiance Field Rendering&rdquo;</a></p>
<p><a href="http://www.yindaheng98.top/%E5%9B%BE%E5%BD%A2%E5%AD%A6/3DGaussianSplatting.html#%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89gaussian%E7%82%B9" target="_blank" rel="noopener noreffer ">http://www.yindaheng98.top/%E5%9B%BE%E5%BD%A2%E5%AD%A6/3DGaussianSplatting.html#%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89gaussian%E7%82%B9</a></p>
<p><a href="http://www.yindaheng98.top/%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E7%90%83%E8%B0%90%E7%B3%BB%E6%95%B0.html#%E7%90%83%E9%9D%A2%E9%AB%98%E6%96%AF%EF%BC%88spherical-gaussian%EF%BC%89" target="_blank" rel="noopener noreffer ">http://www.yindaheng98.top/%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E7%90%83%E8%B0%90%E7%B3%BB%E6%95%B0.html#%E7%90%83%E9%9D%A2%E9%AB%98%E6%96%AF%EF%BC%88spherical-gaussian%EF%BC%89</a></p>
<p><a href="http://www.yindaheng98.top/%E5%9B%BE%E5%BD%A2%E5%AD%A6/3D%E9%AB%98%E6%96%AF%E6%95%B0%E5%AD%A6%E6%8E%A8%E5%AF%BC.html#derivation-of-sampling" target="_blank" rel="noopener noreffer ">http://www.yindaheng98.top/%E5%9B%BE%E5%BD%A2%E5%AD%A6/3D%E9%AB%98%E6%96%AF%E6%95%B0%E5%AD%A6%E6%8E%A8%E5%AF%BC.html#derivation-of-sampling</a></p>
<p><a href="https://www.find.org.tw/index/tech_obser/browse/7eaa3e8ffc7876e74509befd5ed50b8a/" target="_blank" rel="noopener noreffer ">https://www.find.org.tw/index/tech_obser/browse/7eaa3e8ffc7876e74509befd5ed50b8a/</a></p>
<p></p>
<p>3DGS使用隨機梯度下降法進行訓練。步驟如下：</p>
<ol>
<li>SfM Points：首先利用運動恢復結構技術（Structure from Motion，SfM），從一組2D相片中找到不同照片中疊合的特徵點，來估計出初步的3D點雲及相機位置，程式碼中是透過調用COLMAP庫來完成。</li>
<li>Initialization：透過SfM獲得的點雲及<strong>數據進行初始化</strong>，算出各個高斯橢球的位置、形狀、顏色、透明度等參數。</li>
<li>Projection：將每一顆高斯橢球，根據它們與各個相機位置的距離（深度），由近到遠排序進行投影；程式碼中是將中心點座標去跟變換矩陣、協方差矩陣等數據進行運算，就能<strong>將三維空間中的高斯分布轉換到二維的平面上</strong>。</li>
<li>Differentiable Tile Rasterizer：透過<strong>可微光柵化渲染</strong>（即前文提及的「Splatting」得到一張張2D圖像（即流程上的「Image」）。多个3d高斯点颜色合成吗？</li>
<li>Adaptive Density Control：根據步驟4.所獲得之渲染2D圖像（即流程上的「Image」）與Ground Truth圖像（原先上傳的照片）之間的差異，計算出loss值，並將loss值沿藍色箭頭方向回傳。藍色箭頭<strong>向上即更新3D高斯橢球的參數</strong>，向下則送入自<strong>適應密度控制來更新高斯橢球的密度</strong>，如將小顆的高斯克隆成兩顆、將大顆的高斯分裂兩小顆等，以更好地擬合照片中的細節。</li>
</ol>
<h1 id="全文翻译">全文翻译</h1>
<p><a href="https://blog.csdn.net/m0_38068229/article/details/137171860" target="_blank" rel="noopener noreffer ">https://blog.csdn.net/m0_38068229/article/details/137171860</a></p>]]></description></item><item><title>知识笔记</title><link>https://fjyu95.github.io/posts/summary-127e4020f060808da8e0f23caf646e39/</link><pubDate>Tue, 22 Oct 2024 00:00:00 +0000</pubDate><author>fjyu95</author><guid>https://fjyu95.github.io/posts/summary-127e4020f060808da8e0f23caf646e39/</guid><description><![CDATA[<p>deep-learning、CV（2d、3d）、RS、optical</p>
<h1 id="视觉slam">视觉slam</h1>
<p><a href="https://wykxwyc.github.io/2019/03/21/Small-Talk/" target="_blank" rel="noopener noreffer ">https://wykxwyc.github.io/2019/03/21/Small-Talk/</a></p>
<h2 id="视觉slam框架">视觉slam框架</h2>
<p></p>
<p>整个视觉 SLAM 流程包括以下步骤。</p>
<ol>
<li>传感器信息读取。在视觉 SLAM 中主要为相机图像信息的读取和预处理。如果是在机器人中，还可能有码盘、惯性传感器等信息的读取和同步。</li>
<li>视觉里程计（Visual Odometry，VO）。视觉里程计的任务是<strong>估算相邻图像间相机的运动，以及局部地图的样子</strong>。VO 又称为前端（Front End）。</li>
<li>后端优化（Optimization）。后端接受不同时刻视觉里程计测量的相机位姿，以及<strong>回环检测</strong>的信息，对它们进行<strong>优化，得到全局一致的轨迹和地图</strong>。由于接在 VO 之后，又称为后端（Back End）。</li>
<li>回环检测（Loop Closing）。回环检测判断机器人是否到达过先前的位置。如果检测到回环，它会把信息提供给后端进行处理。</li>
<li>建图（Mapping）。它根据估计的轨迹，建立与任务要求对应的地图。</li>
</ol>
<h2 id="数学基础">数学基础</h2>
<p>向量一般默认指列向量</p>]]></description></item></channel></rss>